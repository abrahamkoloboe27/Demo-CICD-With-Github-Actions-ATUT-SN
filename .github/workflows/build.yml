name : Build and Push to Docker Hub
on:
  push:
    branches:
      - main

jobs:
  cancel-previous-runs:
    name: 🧹 Cancel previous runs
    runs-on: ubuntu-latest
    steps:
    - name: 🛑 Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.10.1
      with:
        access_token: ${{ secrets.PAT }}
    - name: ⬇️ Check out
      uses: actions/checkout@v3
    - run: echo "Building"

 
  build-and-push-github-container-registry:
    name: 📦 Docker build
    runs-on: ubuntu-latest
    needs: cancel-previous-runs
    steps:
    - name: ⬇️ Check out
      uses: actions/checkout@v4
    - name: 🐋 Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.PAT }}
    - name: 🐋 Build and push docker Backend Image
      uses: docker/build-push-action@v6
      with:
        context: ./backend
        file: ./backend/Dockerfile
        platforms: linux/amd64, linux/arm64
        push: true
        tags: ghcr.io/abrahamkoloboe27/demo-cicd-atut-backend:${{ github.sha }}, ghcr.io/abrahamkoloboe27/demo-cicd-atut-backend:latest
    - name: 🐋 Build and push docker Frontend Image
      uses: docker/build-push-action@v6
      with:
        context: ./frontend
        file: ./frontend/Dockerfile
        platforms: linux/amd64, linux/arm64
        push: true
        tags: ghcr.io/abrahamkoloboe27/demo-cicd-atut-frontend:${{ github.sha }}, ghcr.io/abrahamkoloboe27/demo-cicd-atut-frontend:latest

  deploy:
    name: 🚀 Deploy with Docker Compose
    runs-on: ubuntu-latest
    needs: build-and-push-github-container-registry
    steps:
      - name: ⬇️ Check out
        uses: actions/checkout@v4
      - name: 🐋 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Étape 5 : Copier les scripts sur le serveur
      - name: Copy scripts to server
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "./deploy.sh,./install_docker.sh"
          target: "/home/${{ secrets.SERVER_USER }}/deployment"

      # Étape 6 : Déployer sur le serveur via SSH en exécutant le script 'deploy.sh'
      - name: Deploy to Server via SSH
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: |
            GHCR_PAT=${{ secrets.PAT }}
            SERVER_USER=${{ secrets.SERVER_USER }}
          script: |
            cd /home/$SERVER_USER/deployment
            chmod +x deploy.sh
            ./deploy.sh